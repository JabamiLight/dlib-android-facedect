apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'



ext {
    boolean isWindow = isWindowsOS();
    if (isWindow) {
        native_sdk_path = rootDir.getAbsolutePath().replace('\\', '/') + "/app"
    } else {
        native_sdk_path = file(rootDir.getAbsolutePath() + "/app")
    }
}

/** 判断是否为Windows操作系统 */
boolean isWindowsOS() {
    boolean isWindowsOS = false;
    String osName = System.getProperty("os.name");
    println("os.name=" + osName);
    if (osName == null || "".equals(osName)) {
        return false;
    }
    if (osName.toLowerCase().indexOf("windows") > -1) {
        isWindowsOS = true;
    }
    return isWindowsOS;
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.ty.opencvtest"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
                abiFilters 'armeabi-v7a'

            }
        }
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
            }
        }

    }
    buildTypes {

        debug{

            minifyEnabled false  // 是否启动压缩
            debuggable true
            jniDebuggable true

            externalNativeBuild {
                cmake {
                    arguments '-DANDROID_PLATFORM=android-26', '-DANDROID_TOOLCHAIN=clang',
                            '-DANDROID_ARM_NEON=TRUE',
                            "-DPATH_TO_MEDIACORE:STRING=${native_sdk_path}"
                    cFlags '-O3', '-DGL_GLEXT_PROTOTYPES', '-DEGL_EGLEXT_PROTOTYPES', '-fsigned-char', "-I${native_sdk_path}", '-Wformat','-mfpu=neon', '-mfloat-abi=softfp -frtti' // full optimization, char data type is signed
                    // 编译优化，设置函式是否能被 inline 的伪指令长度
                    cppFlags '-O3', '-fexceptions', '-fsigned-char',
                            "-frtti -std=c++11", '-Wformat'

                }
            }
        }
        release {
            minifyEnabled false
            debuggable true
            jniDebuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
